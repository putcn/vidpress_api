openapi: 3.0.0
info:
  title: 视频生成任务
  version: '1.0'
  description: 视频生成任务API
servers:
  - url: 'http://vidpress_api_server/v1'
    description: ''
paths:
  /task:
    get:
      summary: 获取视频生成任务列表
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paged_tasks'
      description: 返回用戶全部任务列表.
      parameters:
        - schema:
            type: number
          in: query
          name: page
          description: 'page number, 20 per page'
        - schema:
            type: string
          in: query
          name: task_ids
          description: 'comma seperated task ids, e.g. 1,2,3'
    post:
      summary: 创建视频生成任务
      responses:
        '200':
          description: 任务创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '509':
          description: Bandwidth Limit Exceeded (Apache)
      description: |
        创建一个视频生成任务. 配置中支持callback_url, 在任务有任何更新的时候request该url; 支持设定任务优先级, 3为普通优先级, 2为高优先级. 原则上支持1和0, 若非必要请勿占用. 
        创建视频任务支持不提供數據到news_url (EX: news_url="", field 是 required, 但可以empty), 这样会创建一个空任务, 请通过task upload接口上传所需media, 然后call alignment接口来对齐媒体和文字并生成视频

        ---
        Vidpress也支持结构化新闻数据，这在用户想提交一个完整的新闻内容但没有对应的URL时可使用，想用结构化新闻数据时，请使用content和title

        EX: 
        content = [
            {
              "type": "image",
              "data": "http://www.example.com/example.jpeg"
            },
            {
              "type": "text",
              "data": "鸣人和佐助在终结之谷进行了最后一场较量。最终的结果，虽然是两败俱伤，但佐助也算是从走弯的路上被鸣人给硬掰了回来。"
            }
        ]

        title = "鸣人和佐助"

        ---
        Vidpress 提供部分自定義模塊，使用方法是在 "extra_config" 中添加配置。 

        开头视频

        Vidpress支持自定义开头视频,使用方法是在extra_config中,提供以下两个参数
        {
        "Video/CUSTOM_TITLE_PATH":"https://www.example.com/intro.mov",
        "DEFAULT/TITLE_DURATION":3
        }
        请注意这两个参数需要一起导入,不然开头会无法正确播放。这个是由于一些legacy issue,导致我们不直接采用视频的长度,目前希望能在下一版本修复。

        目前Vidpress提供四种不同的片头，分为通用，财经，娱乐，与体育，根据文章的种类，Vidpress会自行选用适当的风格，如果有需要特地选用某一个风格的话，可透过更改
        'Production/STYLE_THEME'来控制，选项有 ['entertainment', 'sports', 'finance', 'general']

        片尾视频

        Vidpress支持自定义片尾视频,提供的视频会在最后播放,片尾视频播放时,会同时播放片尾视频自带的音乐,背景音乐会在播放片尾视频前fadeout.
        使用方法是在extra_config中,提供以下参数

        {
        "Production/CUSTOM_ENDING_PATH":"https://www.example.com/outro.mov",
        }

        跟片头不一样,这里只需要CUSTOM_ENDING_PATH就够了

        注意：片尾默认是使用Vidpress Logo ending video.如果有需要将Vidpress的标签结尾去掉的话，可以传入一个empty string。Vidpress会读取这个配置且不自动加入Vidpress的标签结尾。
        使用方法
        {
        "Production/CUSTOM_ENDING_PATH":"",
        }

        台标

        Vidpress支持自定义台标图片,目前台标只支持图片,不支持视频类（包括GIF）,导入后会在左上或右上放入台标图片,台标只会在视频Body里出现,片头片尾都不会展现台标。
        使用方法是在extra_config中,提供以下参数

        {
        "Production/CUSTOM_LOGO_PATH":"http://www.example.com/baidu.png",
        "Production/LOGO_MARGIN":"20",
        "Production/LOGO_POS":"top-left",
        }

        LOGO_MARGIN为optional,default是0,会同时指定上方和左右的margin.如果需要呈现上方和左右是不同数值的margin,请更改台标图片,将margin内崁到图里。
        LOGO_POS为optional,可用的数值为["top-left","top-right"],default是top-left。


        字幕块

        Vidpress支持自定义字幕块图片,目前字幕块只支持图片,不支持视频类（包括GIF）,导入后会在下方正中放入字幕块图片,Vidpress不对字幕块图片做任何处理,请确保字幕块的长宽高是符合最终呈现的大小,建议大小约为1280x130上下,字幕块只会在视频Body里出现,片头片尾都不会展现字幕块。
        Vidpress 支持自定义配置字幕的宽度和上下的位置，在需要限制字幕的状况下（像是不希望字幕挡到左右的图片），可以利用CUSTOM_CAPTION_WIDTH来配置字幕里的字的最大宽度，在需要控制字幕上下的位置时，可以利用CUSTOM_CAPTION_BOTTOM_MARGIN来配置字幕的上下位置。
        可以利用'Output/color'来配置字幕的颜色，颜色的格式支持HEX color code.EX: '#FF0022'
        可以利用'Output/font'来配置字幕的字体, EX: {'Output/font': 'ArialUnicode'}
        使用方法是在extra_config中,提供以下参数

        {
        "Production/CUSTOM_CAPTION_BG_PATH":"https://www.example.com/cap_bg.png",
        "Production/CUSTOM_CAPTION_WIDTH": 846,
        "Production/CUSTOM_CAPTION_BOTTOM_MARGIN": 20,
        "Output/color": '#FF0022',
        'Output/font': 'ArialUnicode'
        }

        背景音乐

        Vidpress支持自定义背景音乐,背景音乐只会在视频Body里出现,片头片尾都不会拨出背景音乐。如果背景音乐的长度不够视频的长度,会自动重复歌曲。
        使用方法是在extra_config中,提供以下参数

        {
        "Production/CUSTOM_BG_MUSIC_PATH":"https://www.example.com/bg.mp3",
        }
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task_config'
    parameters: []
  '/task/{task_id}':
    parameters:
      - type: string
        name: task_id
        in: path
        required: true
        schema:
          type: number
        description: task id
    get:
      summary: 获取视频生成任务
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples: {}
        '404':
          description: 任务没找到
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: '依據 {task_id} 返回一個指定的任務詳情內容.'
    post:
      summary: 重新生成视频
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                example-1:
                  value:
                    id: 0
                    config:
                      news_url: string
                      tts_per: 0
                      duration: 0
                      callback_url: 'http://example.com'
                      priority: '3'
                      summary: string
                      image_tag: renminribao-1.0.1
                      extra_config: '{''ALIGNMENT/MAX_SOURCE_CONFIDENCE'':4}'
                      source: 'current-url, current-url-host, lib-vidpress, lib-renminribao, internet'
                      expected_output: video
                      title: string
                      content:
                        - type: text
                          data: string
                      resolution: string
                    status: null
                    estimation:
                      start_time: 0
                      finish_time: 0
                    progress:
                      - percentage: 0
                        message: string
                        task_id: 0
                        status: waiting
                    result: null
                    error: null
                    production_report: null
        '404':
          description: 任务未找到
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: 重新生成指定的 task 视频. 请在更新了summary后者timeline之后重新生成视频. 支持跟新task_config来更改任务优先级
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task_config'
            examples:
              example-1:
                value:
                  news_url: string
                  tts_per: 0
                  duration: 0
                  callback_url: 'http://example.com'
                  priority: '3'
                  summary: string
                  image_tag: renminribao-1.0.1
                  extra_config: '{''ALIGNMENT/MAX_SOURCE_CONFIDENCE'':4}'
                  source: 'current-url, current-url-host, lib-vidpress, lib-renminribao, internet'
                  expected_output: video
                  title: string
                  content:
                    - type: text
                      data: string
                  resolution: string
    delete:
      summary: 终止视频生成任务
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
              examples:
                success message:
                  value:
                    code: 200
                    message: task deleted
      description: 终止任务.
  '/task/{task_id}/summary':
    parameters:
      - type: string
        name: task_id
        in: path
        required: true
    get:
      summary: 获取视频生成任务文章摘要
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
      description: 获取当前任务的文章摘要.
    post:
      summary: 更新视频生成任务的文章摘要.
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Summary'
      description: 更新当前任务的文章摘要并重新生成视频.
  '/task/{task_id}/timeline':
    parameters:
      - type: string
        name: task_id
        in: path
        required: true
    get:
      summary: 获取视频生成任务时间轴
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
      description: 获取任务时间轴.
    post:
      summary: 更新任务时间轴.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
      description: 更新任务时间轴并重新生成视频.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timeline'
  '/task/{task_id}/upload/{filename}':
    parameters:
      - type: string
        name: task_id
        in: path
        required: true
      - schema:
          type: string
        name: filename
        in: path
    post:
      summary: 视频生成任务文件上传
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: file_name
                properties:
                  media_path:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        description: ''
      parameters:
        - schema: {}
          in: query
          name: file
          required: true
          description: 文件
      description: '上传文件到task中, 可以指定上传之后的文件名, 返回值为此文件在任务中的media_path'
  '/task/{task_id}/alignment':
    parameters:
      - type: string
        name: task_id
        in: path
        required: true
    get:
      summary: 获取视频生成任务图文对齐数据
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alignment'
      requestBody: {}
    post:
      summary: 上传图文对齐数据
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alignment'
              examples:
                example-1:
                  value:
                    alignment:
                      - text: string
                        media:
                          - null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alignment'
            examples:
              example-1:
                value:
                  alignment:
                    - text: string
                      media:
                        - null
      description: '设定图片和文字对齐数据. 注意, 上传此项将覆盖自动媒体查找和对齐过程, 完全手动设定文字和媒体. media path可以是已经上传完成的文件路径(相对), 或者URL'
    delete:
      summary: 删除手动对齐数据
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
              examples:
                success message:
                  value:
                    code: 200
                    message: alignment deleted
      description: '删除手动对齐数据, 恢复使用自动对齐'
  '/task/{task_id}/rough_timeline':
    parameters:
      - schema:
          type: string
        name: task_id
        in: path
        required: true
    get:
      summary: 获取视频生成任务图文粗略对齐
      tags: []
      responses:
        '200':
          description: OK
        '204':
          description: No Content
      operationId: get-task-task_id-rough_timeline
      description: 获取之前提供的rough timeline任务时间轴.
    post:
      summary: 更新视频生成任务粗略时间轴文件资源
      operationId: post-task-task_id-rough_timeline
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
      description: |-
        更新当前任务的文章摘要，视频与图片并重新生成视频.

        与一般的 /task/{task_id}/timeline 不同点在于
        /timeline 不会再对 timeline 进行任何处理，用户需要确定所有 timeline.json 里提供的档案都已透过 /upload/{filename} 上传过。

        /roug_timeline 则是会读取 caption_tracks 里的文字，重新生成 TTS，按照最终 TTS duraiton 微调 media tracks 的 duration. media tracks 里提供的 media_path也可以是 URL，系统会帮助用户下载。

        media tracks 里若提供 'description'，Vidpress 將會創建一個二級頭標，可以利用這個功能加入副標題等功能，會建立一個約 4~10秒的標題在左下角。

        注意：由於接口在定義媒體數據時，支持 url 格式，Vidpress 會依據提供的媒體ＵＲＬ去下載，為避免可能的錯誤，Vidpress 必須對資源有所控制，目前會限制用戶在使用
        自定義對齊數據時，最多只可以提供 80 個 media, 同時每個 media 的大小須小於 20MB (尚未 implement)

        可以添加 custom_info field 來自定義轉場
        "custom_info": {
                            "transition": {
                                "duration": 1,
                                "type": "push",
                                "direction": "right"
                            }
                        },
  '/task/{task_id}/resource/{file_path}':
    parameters:
      - schema:
          type: string
        name: task_id
        in: path
        required: true
      - schema:
          type: string
        name: file_path
        in: path
        required: true
    get:
      summary: 获取视频生成任务文件资源
      tags: []
      responses:
        '200':
          description: File body
        '404':
          description: Not Found
      operationId: get-task-task_id-resource
      description: |-
        下載對應{file_path}的檔案。
        雖可以只加一個檔案名，但強烈建議將上傳的檔案放在 raw_materials 目錄下。

        raw_materials 目錄是每一個任務儲存 resource 檔案的地方，為求統一，請盡可能地利用 raw_materials 儲存你上傳的檔案

        {file_path} 是以 task 的主目錄為基準，即與 vidpress.ini, news.json and raw_materials 的 directory. 

        基本應用：
        /task/{task_id}/resource/raw_materials/image1.jpeg

        如果 {file_path} 是指向一個目錄，return 404

        如果 {file_path} 用了 /../, return 404
    post:
      summary: 上传视频生成任务文件资源
      operationId: post-task-task_id-resource
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_path:
                    type: string
        '404':
          description: Not Found
        '409':
          description: Conflict
      description: |-
        上传文件到task中 到對應{file_path}的位址, 可以指定上传之后的文件名, 返回值为此文件在任务中的 file_path

        {file_path} 是以 task 的主目錄為基準，即與 vidpress.ini, news.json and raw_materials 的 directory. 
        雖可以只加一個檔案名，但強烈建議將上傳的檔案放在 raw_materials 目錄下。
        raw_materials 目錄是每一個任務儲存 resource 檔案的地方，為求統一，請盡可能地利用 raw_materials 儲存你上傳的檔案

        基本應用：
        /task/{task_id}/resource/raw_materials/image2.jpeg # 上傳 file content 到 raw_materials/image2.jpeg 的位址。

        同時更新 media.json，下次請求 /task/{task_id}/resource 時，也會包括這檔案。

        如果 {file_path} 是指向一個目錄，return 404

        如果 {file_path} 是指向一個以建立的檔案，return 409 (conflict)，請使用 PUT 來更新文件

        如果 {file_path} 用了 /../, return 404
      parameters:
        - schema: {}
          in: query
          name: file
          description: 文件
          required: true
    delete:
      summary: 删除视频生成任务文件资源
      operationId: delete-task-task_id-resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_path:
                    type: string
        '404':
          description: Not Found
      description: |-
        刪除已有在 {file_path} 的檔案. 

        如果 {file_path} 還未存在，return 404

        如果 {file_path} 是指向一個目錄，return 404

        如果 {file_path} 用了 /../, return 404
    put:
      summary: 更新视频生成任务文件资源
      operationId: put-task-task_id-resource-filename
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_path:
                    type: string
        '404':
          description: Not Found
      description: |-
        更新已有的 file content. 

        更新 task 中對應 {file_path} 位址的文件, 返回值为此文件在任务中的 file_path

        {file_path} 是以 task 的主目錄為基準，即與 vidpress.ini, news.json and raw_materials 的 directory. 
        雖可以只加一個檔案名，但強烈建議將上傳的檔案放在 raw_materials 目錄下。
        raw_materials 目錄是每一個任務儲存 resource 檔案的地方，為求統一，請盡可能地利用 raw_materials 儲存你上傳的檔案

        如果 {file_path} 還未存在，將會建立檔案

        如果 {file_path} 是指向一個目錄，return 404

        如果 {file_path} 用了 /../, return 404
      parameters:
        - schema: {}
          in: query
          name: file
          description: 文件
          required: true
  '/task/{task_id}/resource':
    parameters:
      - schema:
          type: string
        name: task_id
        in: path
        required: true
    get:
      summary: 获取视频生成任务文件资源列表
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_folder'
              examples:
                simpel example:
                  value:
                    result:
                      - type: video
                        filepath: raw_materials/title.mov
        '404':
          description: Not Found
      operationId: get-task-task_id-resource
      description: |-
        返回可用的 resource candidates 列表 (media.json)

        possible types: "video", "image

        以下為例子
        {
          "resource_list": 
          [
            {
              "type": "video",
              "file_path": "raw_materials/11e4be2236c446b99b3d20e2f1cc9750.3.jpeg"
            },
            {media2...},
            {media3...}
          ]
        }

        file_path 的數值，可以用在 /task/{task_id}/resource/{filename} 這個接口上
  '/task/{task_id}/topics':
    parameters:
      - schema:
          type: string
        name: task_id
        in: path
        required: true
    get:
      summary: 获取话题类视频生成任务
      tags: []
      responses: {}
      operationId: get-task-task_id-topics
    post:
      summary: 设定话题类视频生成任务
      operationId: post-task-task_id-topics
      responses:
        '200':
          description: OK
      description: '设定图片和文字对齐数据. 注意, 上传此项将覆盖自动媒体查找和对齐过程, 完全手动设定文字和媒体. media path可以是已经上传完成的文件路径(相对), 或者URL'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
  '/task/{task_id}/ppt_alignment':
    parameters:
      - schema:
          type: string
        name: task_id
        in: path
        required: true
    post:
      summary: 上传PPT文件资源
      operationId: post-task-task_id-ppt_alignment
      responses:
        '201':
          description: Created
      description: |-
        提供带有备注的PPT文件，服务器将会提取每一页的备注去生成语音解说词，然后与每一页的画面对齐后，转化成一个mp4视频文件。     

        PPT文件必须满足以下三个条件：（1）文件以.pptx结尾；（2）每一页的幻灯片必须添加备注；（3）文件大小不能超过50M；    

        该接口的使用方式与/task/{task_id}/alignment与/task/{task_id}/rough_timeline的使用方式类似，需要先调用/task接口创建空的vidpress任务，然后用返回的task_id去调用/task/{task_id}/ppt_alignment。创建空任务的响应时间和普通的创建时间没有区间，上传PPT文件的响应时间会受到PPT文件大小以及网速的影响。

        可接受本地ppt文件路径或者ppt下载地址两种参数作为输入，正常请求返回201。如果两个参数都缺失或者两个参数都包含，请求会返回400。
      parameters:
        - schema:
            type: string
          in: query
          name: file
          description: 本地PPT文件路径
        - schema:
            type: string
          in: query
          name: ppt_url
          description: PPT文件的公网下载地址
  /wordseg:
    get:
      summary: 字幕分句
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type:
                      - string
                      - array
                    items:
                      type: string
      operationId: get-wordseg
      description: |
        輸入一段句子，提供分詞
        ＥＸ：
        text = '据《印度快报》《今日印度》等媒体24日报道，曾主演《三傻大闹宝莱坞》的印度知名演员',

        {'result': ['据印度快报今日印度等媒体24日报道，', '曾主演三傻大闹宝莱坞的印度知名演员']}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: 需要分段詞的句子。
                width:
                  type: integer
                  description: 預估的影片寬度
                font_size:
                  type: integer
                  description: 預估的字體大小
              required:
                - text
  '/task/{task_id}/template_video':
    parameters:
      - schema:
          type: string
        name: task_id
        in: path
        required: true
        description: template vidpress task id
    post:
      summary: 上传模版视频的结构化数据资源
      operationId: post-task-task_id-template_video
      responses:
        '200':
          description: OK
      description: |
        提供模版化视频生成所需要的结构化数据。 结构化数据的构造为list of dictionary，每个dictonary对应制作一个模版视频片段所用到的参数，例：
        ```
        　[
        　  {"theme": "zs_zaobao",
        　   "template": "intro",
        　   "duration": 5,
        　   "template_data": {...}},
        　   
        　  {"theme": "zs_zaobao",
        　   "template": "news",
        　   "duration": 10,
        　   "template_data": {...}},
        　   
        　   {"theme": "zs_zaobao",
        　   "template": "stock_view",
        　   "duration": 20,
        　   "template_data": {...}}
        　]
        ```

        **招行财经早报**

        三类模版视频的参数输入规范：

        1. [intro page](https://rockstar.stoplight.io/docs/vidpress-api/c2NoOjE5OTM2NTE4-zs-intro-page)
        2. [news page](https://rockstar.stoplight.io/docs/vidpress-api/c2NoOjE5OTM2NTE5-zs-news-page)
        3. [stock view page](https://rockstar.stoplight.io/docs/vidpress-api/c2NoOjE5OTM2NTIw-zs-stock-view-page)

        注意：模版vidpress会按照结构化数据中每个模版数据在列表中的先后顺序去整合和播放最终的模版视频。

        该接口的使用方式与/task/{task_id}/alignment与/task/{task_id}/rough_timeline的使用方式类似，需要先调用/task接口创建空的template vidpress任务，然后用返回的task_id去调用/task/{task_id}/template_video。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template_alignment'
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value: {}
        description: ''
      parameters: []
components:
  schemas:
    Error:
      title: Error
      type: object
      properties:
        code:
          type: integer
          description: 错误代码
        message:
          type: string
          description: 错误描述
      description: 错误
    Production_report:
      title: Production_report
      type: object
      description: 视频生成过程报告
      properties:
        start:
          type: string
          description: 生成开始时间
        end:
          type: string
          description: 结束时间
        duration:
          type: string
          description: 生成过程时长
        steps:
          type: array
          description: 生成过程每一步耗时
          items:
            type: object
            properties:
              name:
                type: string
                description: 步骤名称
              start:
                type: string
                description: 步骤开始时间
              end:
                type: string
                description: 步骤结束时间
              duration:
                type: string
                description: 步骤时长
        metadata:
          type: object
          properties:
            GIT_VERSION:
              type: string
              description: vidpress git 版本
            GIT_BRANCH:
              type: string
              description: vidpress git branch name
            API error count:
              description: api 错误个数
              type: string
            duplicated image count:
              type: string
              description: 重复图片个数
            timeline gaps count:
              type: string
              description: 时间轴空白时间段个数
            timeline gaps:
              type: array
              description: 空白时间段和相关素材
              items: {}
        start_timestamp:
          type: number
          format: float
          description: 开始时间的时间戳
        end_timestamp:
          type: number
          format: float
          description: 结束时间的时间戳
    Progress:
      title: Progress
      type: object
      description: 视频生成进度. task callback the url 中会post此数据
      properties:
        percentage:
          type: integer
          description: 0~100
        message:
          type: string
          description: 此进度描述
        task_id:
          type: number
        status:
          type: string
          enum:
            - waiting
            - in_progress
            - completed
    Summary:
      title: Summary
      type: object
      description: 生成tts的文章摘要
      properties:
        summary:
          type: string
          description: 文章摘要
      required:
        - summary
    Task_config:
      title: Task_config
      type: object
      description: 视频生成任务参数
      x-examples:
        配置 example:
          news_url: 'http://baijiahao.baidu.com/s?id=1665004266650805432'
          tts_per: '4106'
          duration: '120'
          priority: 3
          extra_config:
            Video/CUSTOM_TITLE_PATH: 'https://video-generation-background-audio.s3-us-west-1.amazonaws.com/intro.mov'
            Production/CUSTOM_ENDING_PATH: 'https://video-generation-background-audio.s3-us-west-1.amazonaws.com/outro.mov'
            Production/CUSTOM_BG_MUSIC_PATH: 'https://s3-us-west-1.amazonaws.com/video-generation-background-audio/汽车.mp3'
            Production/CUSTOM_LOGO_PATH: 'http://www.baidu.com/img/baidu_resultlogo@2.png'
            Production/LOGO_MARGIN: '20'
            Production/LOGO_POS: top-left
            DEFAULT/TITLE_DURATION: 4
        配置 empty news_url，custom alignment 可以使用這個方式來建立 task placeholder:
          news_url: ''
          tts_per: '4106'
          duration: '120'
          priority: 3
      properties:
        news_url:
          type: string
          description: '新闻url, 目前只支持百家号url, 可以为空'
        tts_per:
          type: integer
          description: '发音人代码, 0: 度小美, 1: 度小宇, 3: 度逍遥, 4: 度丫丫, 100: 度小雯(鸽子), 106: 度博文, 103: 度米朵. 默认值为100'
        duration:
          type: integer
          description: '目标视频时长, 单位秒'
        callback_url:
          type: string
          description: 任务有progress时候的callback url
          format: uri
        priority:
          type: number
          default: 3
          description: '任务优先级, 3为普通优先级, 2为高优先级. 原则上支持1和0, 若非必要请勿占用. '
          enum:
            - 2
            - 3
          example: '3'
        summary:
          type: string
          description: 'provide customized summary. when this field is provided, vidpress''s summarization will be disabled for this task'
        image_tag:
          type: string
          example: renminribao-1.0.1
        extra_config:
          type: object
          example: '{''ALIGNMENT/MAX_SOURCE_CONFIDENCE'':4}'
          description: 'Extra_config, 用於添加自訂義開頭影片, 片尾影片, 台標, 字幕塊等配置。每一個 extra_configs 的 key 必須用 <section>/<option> 的格式配置。'
          properties:
            Video/CUSTOM_TITLE_PATH:
              type: string
              description: |
                开头视频

                Vidpress支持自定义开头视频,使用方法是在extra_config中,提供以下两个参数

                {
                "Video/CUSTOM_TITLE_PATH":"https://www.example.com/intro.mov",
                "DEFAULT/TITLE_DURATION":3
                }

                请注意这两个参数需要一起导入,不然开头会无法正确播放。这个是由于一些legacy issue,导致我们不直接采用视频的长度,目前希望能在下一版本修复。
            DEFAULT/TITLE_DURATION:
              type: number
              description: |
                开头视频

                Vidpress支持自定义开头视频,使用方法是在extra_config中,提供以下两个参数

                {
                "Video/CUSTOM_TITLE_PATH":"https://www.example.com/intro.mov",
                "DEFAULT/TITLE_DURATION":3
                }

                请注意这两个参数需要一起导入,不然开头会无法正确播放。这个是由于一些legacy issue,导致我们不直接采用视频的长度,目前希望能在下一版本修复。
            Production/CUSTOM_ENDING_PATH:
              type: string
              description: |-
                片尾视频

                Vidpress支持自定义片尾视频,提供的视频会在最后播放,片尾视频播放时,会同时播放片尾视频自带的音乐,背景音乐会在播放片尾视频前fadeout.
                使用方法是在extra_config中,提供以下参数

                {
                "Production/CUSTOM_ENDING_PATH":"https://www.example.com/outro.mov",
                }

                跟片头不一样,这里只需要CUSTOM_ENDING_PATH就够了
            Production/CUSTOM_LOGO_PATH:
              type: string
              description: |-
                台标

                Vidpress支持自定义台标图片,目前台标只支持图片,不支持视频类（包括GIF）,导入后会在左上或右上放入台标图片,台标只会在视频Body里出现,片头片尾都不会展现台标。

                使用方法是在extra_config中,提供以下参数

                {
                "Production/CUSTOM_LOGO_PATH":"http://www.example.com/baidu.png",
                "Production/LOGO_MARGIN":"20",
                "Production/LOGO_POS":"top-left",
                }

                LOGO_MARGIN为optional,default是0,会同时指定上方和左右的margin.如果需要呈现上方和左右是不同数值的margin,请更改台标图片,将margin内崁到图里。

                LOGO_POS为optional,可用的数值为["top-left","top-right"],default是top-left。
            Production/LOGO_MARGIN:
              type: number
              description: 'LOGO_MARGIN为optional,default是0,会同时指定上方和左右的margin.如果需要呈现上方和左右是不同数值的margin,请更改台标图片,将margin内崁到图里。'
            Production/LOGO_POS:
              type: string
              description: 'LOGO_POS为optional,可用的数值为["top-left","top-right"],default是top-left。'
            Production/CUSTOM_CAPTION_BG_PATH:
              type: string
              description: |-
                字幕块
                Vidpress 支持自定义字幕块图片,目前字幕块只支持图片,不支持视频类（包括GIF）,导入后会在下方正中放入字幕块图片,Vidpress 不对字幕块图片做任何处理,请确保字幕块的长宽高是符合最终呈现的大小,建议大小约为1280x130上下,字幕块只会在视频Body里出现,片头片尾都不会展现字幕块。
                使用方法是在extra_config中,提供以下参数

                {
                "Production/CUSTOM_CAPTION_BG_PATH":"https://www.example.com/cap_bg.png",
                }
            Production/CUSTOM_BG_MUSIC_PATH:
              type: string
              description: |-
                背景音乐

                Vidpress支持自定义背景音乐,背景音乐只会在视频Body里出现,片头片尾都不会拨出背景音乐。如果背景音乐的长度不够视频的长度,会自动重复歌曲。
                使用方法是在extra_config中,提供以下参数

                {
                "Production/CUSTOM_BG_MUSIC_PATH":"https://www.example.com/bg.mp3",
                }
            Production/CUSTOM_OVERLAY_PATH:
              type: string
              description: |-
                Overlay

                Vidpress支持自定义一个Overlay，Overlay只会在视频Body里出现，片头片尾都不会拨出Overlay。Overlay会一直自动重复。

                Overly支持alpha channel，可以利用此功能，在视频加上在定义的编框

                Overaly会自动对齐左上角，可以利用Production/CUSTOM_OVERLAY_POS_X和Production/CUSTOM_OVERLAY_POS_Y来调整Overlay的位置。

                使用方法是在extra_config中，提供以下参数

                {
                "Production/Production/CUSTOM_OVERLAY_PATH"："https://www.example.com/overlay.mov"，
                }
            Production/CUSTOM_OVERLAY_POS_X:
              type: number
              description: 'CUSTOM_OVERLAY_POS_X为optional,default是0,会指定左方的margin.'
            Production/CUSTOM_OVERLAY_POS_Y:
              type: number
              description: 'CUSTOM_OVERLAY_POS_X为optional,default是0,会指定上方的margin.'
            Summarizer/TTS_PAUSE_MARKER:
              type: string
              description: |-
                無聲標記特別字串

                default: #pau#

                TTS 在遇到摘要中的無聲標記特別字串，會短暫的停頓 0.5s (可用 TTS_PAUSE_DURATION 控制停頓時間)，此 marker 也可重複使用，重複幾次就停頓幾次。

                無聲標記特別字串不會出現在字幕中，也不會在語音中出現，可用於希望放慢 TTS 時使用。

                注意：這 config 適用於 custom alignment 和 rough_timeline 接口。透過一般的 news url 或結構化 content 的摘要 module 會把特別字串洗掉，無法保證摘要還會保留特別字串。

                EX: 鸣人#pau#和佐助#pau##pau#在终结之谷
                以上句子在唸完“鸣人” 之後，會短暫的停頓 0.5s，在唸完“佐助” 之後，會短暫的停頓 1s
            Summarizer/TTS_PAUSE_DURATION:
              type: string
              description: |-
                無聲停頓

                default: 0.5

                配置無聲標記特別字串短暫的停頓時間
            Production/STYLE_THEME:
              type: string
              description: |-
                風格主題設定

                目前支持的只有 "general"
                設定風格主題可以將開頭，人物誌等生成素材切換成不同的風格，會慢慢支持更多的風格。
            AIService/TTS_SPEED:
              type: number
              description: 'TTS语音速度, 单位: 字/秒, 默认值: 5'
        source:
          type: array
          example: 'current-url, current-url-host, lib-vidpress, lib-renminribao, internet'
          description: |-
            指定可使用的 media 來源
            CURRENT_URL：只使用新聞URL 本身帶的圖片
            CURRENT_URL_HOST：搜索新聞來源的站上，尋找類似的新聞，使用其中的圖片。
            LIB_Vidpress：使用 Vidpress 本身的素材庫。

            其接收的value 是 list of string, 可用的來源有 "CURRENT_URL", "CURRENT_URL_HOST", "LIB_Vidpress"
            EX: ["CURRENT_URL”]
          items:
            type: string
        expected_output:
          type: string
          enum:
            - extraction
            - timeline
            - video
          example: video
        title:
          type: string
          description: |-
            結構化的新聞輸入

            作為新聞 title
        content:
          type: array
          description: |-
            結構化的新聞輸入

            輸入是 list of paragraph element.
            每一個 paragraph element 需要指定 type and data. 
            每一個 elemtn 可是視為是一個文章段落，或是一個圖片媒體。
            更詳細的解說在 Paragraph ref 中。

            EX: [
                {
                  "type": "image",
                  "data": "http://www.example.com/caption.jpeg"
                },
                {
                  "type": "text",
                  "data": "Hello World"
                }
              ]
          items:
            $ref: '#/components/schemas/Paragraph'
        resolution:
          type: string
          description: |-
            Type: String
            Default 1280x720

            Resolution should follow [width]x[height] format
            EX: 640x360, 或是 1280x720
      required:
        - news_url
        - tts_per
        - duration
    Task:
      title: Task
      type: object
      description: 视频生成任务
      properties:
        id:
          type: integer
          description: task id
        config:
          $ref: '#/components/schemas/Task_config'
        status:
          oneOf:
            - description: waiting
            - description: in_progress
            - description: completed
          type: string
        estimation:
          type: object
          description: 任务时间预期
          properties:
            start_time:
              type: integer
              description: '预期的排队结束时间, 时间戳'
            finish_time:
              type: integer
              description: '预期的视频生成完成时间, 时间戳'
        progress:
          type: array
          items:
            $ref: '#/components/schemas/Progress'
        result:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/Video'
          description: '视频生产结果, 如果视频尚未生成或者生成失败此项为null'
        error:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/Error'
          description: '任务错误描述, 如果尚未有错误此项为null'
        production_report:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/Production_report'
          description: '视频生产过程报告, 包括开始结束时间, 时长, 版本信息等. 生成没有完成之前此项为null'
      x-examples: {}
    Timeline:
      title: Timeline
      type: object
      description: '对时间轴的描述. 请注意, 此json中client需要关心的就是下面列出来的字段. 在tracks中有type为''audio''的, 请勿更改他们在列表中的顺序. 调整素材顺序的话请只调整type为''video''和''image''的track.'
      properties:
        tracks:
          type: array
          items:
            type: object
            properties:
              media_path:
                type: string
              media_url:
                type: string
                format: uri
              start:
                type: string
              duration:
                type: number
                format: float
                example: '3.5'
              type:
                type: string
                enum:
                  - video
                  - audio
                  - image
                example: video
              description:
                type: string
                description: |-
                  二级头标

                  注意：只会被rough_timeline中被使用，一般的timeline接口会忽略这个数据。

                  依据提供的内容，会建立一个约4~10秒的标题在左下角。
                  二级头标的文字长度不宜过长。
    Video:
      title: Video
      type: object
      description: 生成的视频
      properties:
        url:
          type: string
          description: 视频文件url
        cover_url:
          type: string
          description: ' 视频封面url'
        duration:
          type: integer
          description: '视频时长, 单位为秒'
        title:
          type: string
          description: 视频标题
        summary:
          type: string
        category:
          type: string
        timeline_url:
          type: string
          description: url to fetch time
    Paged_tasks:
      title: Paged_tasks
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          format: uri
          description: 下一页内容url
        previous:
          type: string
          format: uri
          description: 上一页内容url
        results:
          type: array
          items:
            $ref: ''
    Alignment:
      title: Alignment
      type: object
      description: 手动媒体与文本对齐
      properties:
        alignment:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
                description: 本段对应的文本
              media:
                type: array
                description: 'list of media path, can be either url or relative path'
                items:
                  type:
                    - string
                    - object
                  description: '数组成员可以是media url的string, 也可以是{url:''<media url>'', expected_duration:<duration in second>}'
                  properties:
                    url:
                      type: string
                    expected_duration:
                      type: number
                  required:
                    - url
            required:
              - text
    Resource_folder:
      title: resource_list
      type: object
      x-examples:
        example1:
          result:
            - type: file
              path: path1
            - type: folder
              path: path2
      description: Media Resouce folder of a project.
      properties:
        'resource_list ':
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              file_path:
                type: string
    Topic:
      title: Topics
      type: object
      description: |-
        使用 media list and queries 来制作视频
        目前 queries 只是 place holder.
      properties:
        topics:
          type: object
          properties:
            media:
              type: array
              description: list of media path
              items:
                type: object
                description: ''
                properties:
                  url:
                    type: string
                  expected_duration:
                    type: number
                    description: optional
                  type:
                    type: string
                    description: video or image
                  description:
                    type: string
                    description: |-
                      二级头标

                      依据提供的内容，会建立一个约4~10秒的标题在左下角。
                      二级头标的文字长度不宜过长。
                required:
                  - url
                  - type
            expected_duration:
              type: string
              description: 'optional: if set, Vidpress will try its best to fix all the media into the final video with the expected_duration.'
            queries:
              type: array
              description: User can also input a list of queries.
              items:
                type: object
                properties:
                  query:
                    type: string
                  value:
                    type: string
      required:
        - topics
    Paragraph:
      title: Paragraph
      type: object
      x-examples:
        text type:
          type: text
          data: 能够看到，沙溢找到自己的座位之后，第一件事情就是把自己的准考证放在桌子上面，而且镜头还拍摄了一些准考证上面的信息，虽然这只是一个恶搞版本，但乍一看，还是有些真实的，毕业中学是奔跑中学，考场则是666考场，还是非常搞笑的，但照片却非常的逼真，使用了一张沙溢年轻时候的照片，所以也是被很多的粉丝调侃：差点以为是真的！
        image type:
          type: image
          data: 'http://foo.bar/a.jpg'
      description: |
        結構化的新聞輸入中的 paragraph element.
        每一個 paragraph element 需要指定 type and data. 
        每一個 elemtn 可是視為是一個文章段落，或是一個圖片媒體。

        type: "image" or "text" 代表這一個 paragraph 的屬性。
        data: 這一個 paragraph 的值。可以是一段文字，或是一個圖片的 URL，也可以用 base64 encoded string 來取代 image url.


        EX: {"type": "image", "data": "http:www.example.com/caption.jpeg"}
      properties:
        type:
          type: string
          default: text
          description: |-
            paragraph 的屬性。

            可以為 "image" or "text"
        data:
          type: string
          description: |-
            can be media url, media path, or paragraph text itself

            也支持 base64 encoded data string.

            如果使用 base64 data string, Vidpress 會利用 'filetype' 來判斷 media 是使用什麼 extension。
      required:
        - type
        - data
    ZS_intro_page:
      description: 招商银行财经早报封面页。
      type: object
      x-examples:
        输入示例:
          value:
            theme: zs_zaobao
            template: intro
            duration: 5
            template_data:
              title: 见证历史！深市两版合并正式实施，超20万亿板块起航，市场影响几何？
              date: 21.04.07 Wed.
              media_center:
                type: image
                url: 'http://www.langxiaozhi.com.cn:7080/public/image/9bd48732c8af1a5709f5c4abe0b4f601.png'
              media_left:
                type: image
                url: 'http://www.langxiaozhi.com.cn:7080/public/image/9bd48732c8af1a5709f5c4abe0b4f601.png'
              media_right:
                type: image
                url: 'http://www.langxiaozhi.com.cn:7080/public/image/9bd48732c8af1a5709f5c4abe0b4f601.png'
              logo:
                type: image
                url: 'http://user-tool:8080/media/gui_topics/custom_media/logo.png'
      title: ''
      x-internal: false
      properties:
        theme:
          type: string
          enum:
            - zs_zaobao
          example: zs_zaobao
          description: 模版主题名称，必须填写为"zs_zaobao"。
        template:
          type: string
          description: 早报封面页模版名称。
          enum:
            - intro
          example: intro
        duration:
          type: number
          description: 模版视频时长。
          example: 5
        template_data:
          type: object
          description: 当前模版所需要的结构化数据。
          required:
            - title
            - date
            - media_center
            - media_left
            - media_right
            - logo
          properties:
            title:
              type: string
              description: 早报封面页的标题文案。最多不能超过34个汉字（包括标点）的长度，超出部分会被自动截断。
              maxLength: 34
              minLength: 0
            date:
              type: string
              description: |-
                早报日期。格式为： 年年-月月-日日 星期
                例如 21.04.17 Sun.
              example: 21.04.17 Sun.
            media_center:
              type: object
              description: '早报封面页的主图，图片展示尺寸为5:4。'
              required:
                - type
                - url
              properties:
                type:
                  type: string
                  enum:
                    - image
                    - video
                  example: image
                  description: 媒体素材类型，可选类型为image和video。
                url:
                  type: string
                  example: 'http://www.langxiaozhi.com.cn:7080/public/image/9bd48732c8af1a5709f5c4abe0b4f601.png'
                  description: 媒体素材链接。
            media_left:
              type: object
              description: '早报封面页的左侧附图，图片展示尺寸为5:4。'
              required:
                - type
                - url
              properties:
                type:
                  type: string
                  enum:
                    - image
                    - video
                  example: image
                  description: 媒体素材类型，可选类型为image和video。
                url:
                  type: string
                  example: 'http://www.langxiaozhi.com.cn:7080/public/image/9bd48732c8af1a5709f5c4abe0b4f601.png'
                  description: 媒体素材链接。
            media_right:
              type: object
              description: '早报封面页的右侧附图，图片展示尺寸为5:4。'
              required:
                - type
                - url
              properties:
                type:
                  type: string
                  enum:
                    - image
                    - video
                  example: image
                  description: 媒体素材类型，可选类型为image和video。
                url:
                  type: string
                  example: 'http://www.langxiaozhi.com.cn:7080/public/image/9bd48732c8af1a5709f5c4abe0b4f601.png'
                  description: 媒体素材链接。
            logo:
              type: object
              description: 早报的Logo图案。图形大小需为300x60。
              required:
                - type
                - url
              properties:
                type:
                  type: string
                  enum:
                    - image
                    - video
                  example: image
                  description: 早报logo类型，可选类型为image和video。
                url:
                  type: string
                  example: 'http://user-tool:8080/media/gui_topics/custom_media/logo.png'
                  description: logo链接。
      required:
        - theme
        - template
        - duration
        - template_data
    ZS_news_page:
      description: 招商银行财经早报新闻页。
      type: object
      x-examples:
        example-1:
          value:
            theme: zs_zaobao
            template: news
            duration: 10
            template_data:
              title: 一度暴涨18% 拼多多最新财报出炉！
              news_category: 重磅新闻
              date: 21.04.17 Sun.
              text: 北京时间8月24日晚间，拼多多发布了2021年第二季度财报，二季度营收230亿元、同比增长89%，不及市场预期的267亿。\n在运营利润、净利润表现上，拼多多当季均扭亏为盈。
              media:
                - type: image
                  url: 'http://n.sinaimg.cn/tech/transform/118/w550h368/20210806/eb2a-e5134322be1faf2b36a896b14351b25e.png'
                  reusable: true
              logo:
                type: image
                url: 'http://user-tool:8080/media/gui_topics/custom_media/logo.png'
      title: ''
      properties:
        theme:
          type: string
          description: 模版主题名称，必须填写为"zs_zaobao"。
          enum:
            - zs_zaobao
          example: zs_zaobao
        template:
          type: string
          enum:
            - news
          example: news
          description: 早报新闻页的模版名称。
        duration:
          type: number
          description: |-
            模版视频时长。
            注意： 如果模版中包括TTS，且TTS时长大于设定的模版视频时长，则会使用TTS时长作为模版视频的总时长。
          exclusiveMinimum: false
          example: 10
        template_data:
          type: object
          description: 当前模版所需要的结构化数据。
          required:
            - title
            - news_category
            - date
            - text
            - media
            - logo
          properties:
            title:
              type: string
              description: 早报新闻页的标题。不得超过16个汉字（包括标点）的长度，超出部分会被自动截断。
              example: 一度暴涨18% 拼多多最新财报出炉！
              maxLength: 16
              minLength: 0
            news_category:
              type: string
              description: 当前新闻的标签，不超过4个汉字。
              example: 重磅新闻
            date:
              type: string
              description: "早报日期。格式为： 年年-月月-日日 星期\n例如 21.04.17 Sun.\_\_"
              example: 21.04.17 Sun.
            text:
              type: string
              description: 新闻正文，无字数限制。段落间可用"\n"符做分隔，被分隔出来的段落会在单独在新的页面中展示。如果段落字数超过了页面可展示的长度，则会自动做翻页处理，在新的页面中展示剩余内容。
              example: 北京时间8月24日晚间，拼多多发布了2021年第二季度财报，二季度营收230亿元、同比增长89%，不及市场预期的267亿。\n在运营利润、净利润表现上，拼多多当季均扭亏为盈。
            media:
              type: array
              uniqueItems: true
              minItems: 1
              description: 提供模版内嵌视频中所使用的媒体素材。
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - image
                      - video
                    example: image
                    description: 媒体素材类型，可选类型为image和video。
                  url:
                    type: string
                    example: 'http://n.sinaimg.cn/tech/transform/118/w550h368/20210806/eb2a-e5134322be1faf2b36a896b14351b25e.png'
                    description: 媒体素材链接。
                  reusable:
                    type: boolean
                    description: 是否可以在视频中循环播放当前素材。
                required:
                  - type
                  - url
                  - reusable
            logo:
              type: object
              description: 早报logo类型，可选类型为image和video。
              required:
                - type
                - url
              properties:
                type:
                  type: string
                  enum:
                    - image
                    - video
                  example: image
                  description: 早报logo类型，可选类型为image和video。
                url:
                  type: string
                  example: 'http://user-tool:8080/media/gui_topics/custom_media/logo.png'
                  description: logo链接。
      required:
        - theme
        - template
        - duration
        - template_data
    ZS_stock_view_page:
      description: 招商银行财经早报股市信息页。
      type: object
      x-examples:
        example-1:
          template: stock_view
          duration: 10
          title: ''
          news_content: ''
          template_data:
            news_category: 股市收盘
            market_close_date: 2021.04.06
            stock_info:
              - name: 沪指
                close_price: '3482.97'
                percentage_change: 0.04%
                trend: upward
              - name: 创业版指
                close_price: '2831.6'
                percentage_change: 0.72%
                trend: downward
          value:
            theme: zs_zaobao
            template: stock_view
            duration: 5
            title: ''
            news_content: ''
            template_data:
              news_category: 股市收盘
              date: 21.09.10 Fri.
              market_close_date: 2021.09.09
              stock_info:
                - name: 沪指
                  close_price: '3482.97'
                  percentage_change: 0.04%
                  trend: upward
                - name: 创业版指
                  close_price: '2831.6'
                  percentage_change: 0.72%
                  trend: downward
                - name: Ａ股指数
                  close_price: '3753.95'
                  percentage_change: 0.43%
                  trend: downward
                - name: 上证新兴
                  close_price: '10595.75'
                  percentage_change: 1.72%
                  trend: upward
                - name: 深证300
                  close_price: '1845.74'
                  percentage_change: 1.04%
                  trend: upward
              logo:
                type: image
                url: 'http://user-tool:8080/media/gui_topics/custom_media/logo.png'
      title: ''
      properties:
        theme:
          type: string
          description: 模版主题名称，必须填写为"zs_zaobao"。
          enum:
            - zs_zaobao
          example: zs_zaobao
        template:
          type: string
          description: 早报股市信息页的模版名称。
          enum:
            - stock_view
          example: stock_view
        duration:
          type: number
          description: |-
            模版视频时长。
            注意： 每条股票信息的展示时间为3秒。若用户提供的视频时长大于所有股票的总展示时间，则会延长股票的展示时间。反之，若用户提供的视频时长小于所有股票的总展示时间，则会将视频时长顺延至所有股票信息展示完毕的时间。
          example: 10
        template_data:
          type: object
          description: 当前模版所需要的结构化数据。
          required:
            - news_category
            - date
            - market_close_date
            - stock_info
          properties:
            news_category:
              type: string
              description: 当前新闻的标签，不超过4个汉字。
              example: 股市收盘
            date:
              type: string
              description: "早报日期。格式为： 年年-月月-日日 星期\n例如 21.04.17 Sun.\_"
              example: 21.04.17 Sun.
            market_close_date:
              type: string
              description: 交易日日期，格式为：年年年年.月月.日日 例如：2021.04.06。
              example: 2021.04.06
            stock_info:
              type: array
              uniqueItems: true
              minItems: 1
              description: 股市信息，可提供任意数量的数据。
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: 股票名称。
                    example: 沪指
                  close_price:
                    type: string
                    description: 收盘价。
                    example: '3482.97'
                  percentage_change:
                    type: string
                    description: 与前一个交易日收盘价相比的变化百分比。
                    example: 0.04%
                  trend:
                    type: string
                    description: 价格变化趋势。
                    enum:
                      - upward
                      - downward
                    example: upward
                required:
                  - name
                  - close_price
                  - percentage_change
                  - trend
      required:
        - theme
        - template
        - duration
        - template_data
    Template_alignment:
      title: Template_alignment
      type: object
      description: 模版视频的输入格式
      properties:
        template_alignment:
          type: array
          items:
            type: object
            properties:
              theme:
                type: string
              template:
                type: string
              duration:
                type: string
              template_data:
                type: object
  securitySchemes: {}
